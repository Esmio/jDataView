{"version":3,"file":null,"sources":["/Users/rreverser/oss/jDataView/src/jdataview.js"],"sourcesContent":["var ctx = BROWSER ? self : global;\n\nvar compatibility = {\n\t// NodeJS Buffer in v0.5.5 and newer\n\tNodeBuffer: NODE && 'Buffer' in ctx,\n\tDataView: 'DataView' in ctx,\n\tArrayBuffer: 'ArrayBuffer' in ctx,\n\tPixelData: BROWSER && 'CanvasPixelArray' in ctx && !('Uint8ClampedArray' in ctx) && 'document' in ctx\n};\n\nvar TextEncoder = ctx.TextEncoder;\nvar TextDecoder = ctx.TextDecoder;\n\n// we don't want to bother with old Buffer implementation\nif (NODE && compatibility.NodeBuffer) {\n\t(function (buffer) {\n\t\ttry {\n\t\t\tbuffer.writeFloatLE(Infinity, 0);\n\t\t} catch (e) {\n\t\t\tcompatibility.NodeBuffer = false;\n\t\t}\n\t})(new Buffer(4));\n}\n\nif (BROWSER && compatibility.PixelData) {\n\tvar context2d = document.createElement('canvas').getContext('2d');\n\tvar createPixelData = function (byteLength, buffer) {\n\t\tvar data = context2d.createImageData((byteLength + 3) / 4, 1).data;\n\t\tdata.byteLength = byteLength;\n\t\tif (buffer !== undefined) {\n\t\t\tfor (var i = 0; i < byteLength; i++) {\n\t\t\t\tdata[i] = buffer[i];\n\t\t\t}\n\t\t}\n\t\treturn data;\n\t};\n}\n\nvar dataTypes = {\n\t'Int8': 1,\n\t'Int16': 2,\n\t'Int32': 4,\n\t'Uint8': 1,\n\t'Uint16': 2,\n\t'Uint32': 4,\n\t'Float32': 4,\n\t'Float64': 8\n};\n\nfunction is(obj, Ctor) {\n\tif (typeof obj !== 'object' || obj === null) {\n\t\treturn false;\n\t}\n\treturn obj.constructor === Ctor || Object.prototype.toString.call(obj) === '[object ' + Ctor.name + ']';\n}\n\nfunction arrayFrom(arrayLike, forceCopy) {\n\treturn (!forceCopy && is(arrayLike, Array)) ? arrayLike : Array.prototype.slice.call(arrayLike);\n}\n\nfunction defined(value, defaultValue) {\n\treturn value !== undefined ? value : defaultValue;\n}\n\nexport default function jDataView(buffer, byteOffset, byteLength, littleEndian) {\n\tif (jDataView.is(buffer)) {\n\t\tvar result = buffer.slice(byteOffset, byteOffset + byteLength);\n\t\tresult._littleEndian = defined(littleEndian, result._littleEndian);\n\t\treturn result;\n\t}\n\n\tif (!jDataView.is(this)) {\n\t\treturn new jDataView(buffer, byteOffset, byteLength, littleEndian);\n\t}\n\n\tthis.buffer = buffer = jDataView.wrapBuffer(buffer);\n\n\t// Check parameters and existing functionnalities\n\tthis._isArrayBuffer = compatibility.ArrayBuffer && is(buffer, ArrayBuffer);\n\tthis._isPixelData = BROWSER && compatibility.PixelData && is(buffer, CanvasPixelArray);\n\tthis._isDataView = compatibility.DataView && this._isArrayBuffer;\n\tthis._isNodeBuffer = NODE && compatibility.NodeBuffer && Buffer.isBuffer(buffer);\n\n\t// Handle Type Errors\n\tif (!(NODE && this._isNodeBuffer) && !this._isArrayBuffer && !(BROWSER && this._isPixelData) && !is(buffer, Array)) {\n\t\tthrow new TypeError('jDataView buffer has an incompatible type');\n\t}\n\n\t// Default Values\n\tthis._littleEndian = !!littleEndian;\n\n\tvar bufferLength = 'byteLength' in buffer ? buffer.byteLength : buffer.length;\n\tthis.byteOffset = byteOffset = defined(byteOffset, 0);\n\tthis.byteLength = byteLength = defined(byteLength, bufferLength - byteOffset);\n\n\tthis._offset = this._bitOffset = 0;\n\n\tif (!this._isDataView) {\n\t\tthis._checkBounds(byteOffset, byteLength, bufferLength);\n\t} else {\n\t\tthis._view = new DataView(buffer, byteOffset, byteLength);\n\t}\n\n\t// Create uniform methods (action wrappers) for the following data types\n\n\tthis._engineAction =\n\t\tthis._isDataView\n\t\t\t? this._dataViewAction\n\t\t: (NODE && this._isNodeBuffer)\n\t\t\t? this._nodeBufferAction\n\t\t: this._isArrayBuffer\n\t\t\t? this._arrayBufferAction\n\t\t: this._arrayAction;\n}\n\nfunction getCharCodes(string) {\n\tif (NODE && compatibility.NodeBuffer) {\n\t\treturn new Buffer(string, 'binary');\n\t}\n\n\tvar Type = compatibility.ArrayBuffer ? Uint8Array : Array,\n\t\tcodes = new Type(string.length);\n\n\tfor (var i = 0, length = string.length; i < length; i++) {\n\t\tcodes[i] = string.charCodeAt(i) & 0xff;\n\t}\n\treturn codes;\n}\n\n// mostly internal function for wrapping any supported input (String or Array-like) to best suitable buffer format\njDataView.wrapBuffer = function (buffer) {\n\tswitch (typeof buffer) {\n\t\tcase 'number':\n\t\t\tif (NODE && compatibility.NodeBuffer) {\n\t\t\t\tbuffer = new Buffer(buffer);\n\t\t\t\tbuffer.fill(0);\n\t\t\t} else\n\t\t\tif (compatibility.ArrayBuffer) {\n\t\t\t\tbuffer = new Uint8Array(buffer).buffer;\n\t\t\t} else\n\t\t\tif (BROWSER && compatibility.PixelData) {\n\t\t\t\tbuffer = createPixelData(buffer);\n\t\t\t} else {\n\t\t\t\tbuffer = new Array(buffer);\n\t\t\t\tfor (var i = 0; i < buffer.length; i++) {\n\t\t\t\t\tbuffer[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer;\n\n\t\tcase 'string':\n\t\t\tbuffer = getCharCodes(buffer);\n\t\t\t/* falls through */\n\t\tdefault:\n\t\t\tif ('length' in buffer && !(\n\t\t\t\t(NODE && compatibility.NodeBuffer && Buffer.isBuffer(buffer)) ||\n\t\t\t\t(compatibility.ArrayBuffer && is(buffer, ArrayBuffer)) ||\n\t\t\t\t(BROWSER && compatibility.PixelData && is(buffer, CanvasPixelArray))\n\t\t\t)) {\n\t\t\t\tif (NODE && compatibility.NodeBuffer) {\n\t\t\t\t\tbuffer = new Buffer(buffer);\n\t\t\t\t} else\n\t\t\t\tif (compatibility.ArrayBuffer) {\n\t\t\t\t\tif (!is(buffer, ArrayBuffer)) {\n\t\t\t\t\t\tbuffer = new Uint8Array(buffer).buffer;\n\t\t\t\t\t\t// bug in Node.js <= 0.8:\n\t\t\t\t\t\tif (!is(buffer, ArrayBuffer)) {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(arrayFrom(buffer, true)).buffer;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else\n\t\t\t\tif (BROWSER && compatibility.PixelData) {\n\t\t\t\t\tbuffer = createPixelData(buffer.length, buffer);\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = arrayFrom(buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn buffer;\n\t}\n};\n\nfunction pow2(n) {\n\treturn (n >= 0 && n < 31) ? (1 << n) : (pow2[n] || (pow2[n] = Math.pow(2, n)));\n}\n\njDataView.is = function (view) {\n\treturn view && view.jDataView;\n};\n\njDataView.from = function () {\n\treturn new jDataView(arguments);\n};\n\nfunction Uint64(lo, hi) {\n\tthis.lo = lo;\n\tthis.hi = hi;\n}\n\njDataView.Uint64 = Uint64;\n\nUint64.prototype.valueOf = function () {\n\treturn this.lo + pow2(32) * this.hi;\n};\n\nUint64.fromNumber = function (number) {\n\tvar hi = Math.floor(number / pow2(32)),\n\t\tlo = number - hi * pow2(32);\n\n\treturn new Uint64(lo, hi);\n};\n\nfunction Int64(lo, hi) {\n\tUint64.call(this, lo, hi);\n}\n\njDataView.Int64 = Int64;\n\nInt64.prototype = 'create' in Object ? Object.create(Uint64.prototype) : new Uint64();\n\nInt64.prototype.valueOf = function () {\n\tif (this.hi < pow2(31)) {\n\t\treturn Uint64.prototype.valueOf.apply(this, arguments);\n\t}\n\treturn -((pow2(32) - this.lo) + pow2(32) * (pow2(32) - 1 - this.hi));\n};\n\nInt64.fromNumber = function (number) {\n\tvar lo, hi;\n\tif (number >= 0) {\n\t\tvar unsigned = Uint64.fromNumber(number);\n\t\tlo = unsigned.lo;\n\t\thi = unsigned.hi;\n\t} else {\n\t\thi = Math.floor(number / pow2(32));\n\t\tlo = number - hi * pow2(32);\n\t\thi += pow2(32);\n\t}\n\treturn new Int64(lo, hi);\n};\n\n// Helper functions for Uint64.prototype.toString\n\n// e.g. 1234 -> [4, 3, 2, 1]\nfunction numToDigits(num) {\n\tvar digits = num.toString().split('');\n\tfor (var i = 0; i < digits.length; i++) {\n\t\tdigits[i] = +digits[i];\n\t}\n\tdigits.reverse();\n\treturn digits;\n}\n\n// Adds two digit arrays, returning the result.\nfunction add(x, y) {\n\tvar z = [];\n\tvar n = Math.max(x.length, y.length);\n\tvar carry = 0;\n\tvar i = 0;\n\twhile (i < n || carry) {\n\t\tvar xi = i < x.length ? x[i] : 0;\n\t\tvar yi = i < y.length ? y[i] : 0;\n\t\tvar zi = carry + xi + yi;\n\t\tz.push(zi % 10);\n\t\tcarry = Math.floor(zi / 10);\n\t\ti++;\n\t}\n\treturn z;\n}\n\n// Precise versions of toString() for Int64/Uint64\n\nUint64.prototype.toString = function() {\n\t// Faster toString() for numbers which can be represented precisely as floats.\n\tif (this.hi < pow2(19)) {\n\t\treturn Number.prototype.toString.apply(this.valueOf(), arguments);\n\t}\n\n\t// This converts the numbers to base 10 digit arrays for arbitrary precision toString().\n\t// See http://www.danvk.org/hex2dec.html\n\n\n\t// Compute result = 2^32 * hi + lo\n\tvar hiArray = numToDigits(this.hi);\n\tvar loArray = numToDigits(this.lo);\n\tfor (var i = 0; i < 32; i++) {\n\t\thiArray = add(hiArray, hiArray, 10);\n\t}\n\tvar result = add(hiArray, loArray, 10);\n\n\tvar str = '';\n\tfor (i = result.length - 1; i >= 0; i--) {\n\t\tstr += result[i];\n\t}\n\treturn str;\n};\n\nInt64.prototype.toString = function() {\n\tif (this.hi < pow2(31)) {\n\t\treturn Uint64.prototype.toString.apply(this, arguments);\n\t}\n\tif (this.hi > pow2(32) - 1 - pow2(19)) {\n\t\treturn Number.prototype.toString.apply(this.valueOf(), arguments);\n\t}\n\treturn '-' + new Uint64((pow2(32) - this.lo), (pow2(32) - 1 - this.hi)).toString();\n};\n\n\nvar proto = jDataView.prototype = {\n\tcompatibility: compatibility,\n\tjDataView: true,\n\n\t_checkBounds: function (byteOffset, byteLength, maxLength) {\n\t\t// Do additional checks to simulate DataView\n\t\tif (typeof byteOffset !== 'number') {\n\t\t\tthrow new TypeError('Offset is not a number.');\n\t\t}\n\t\tif (typeof byteLength !== 'number') {\n\t\t\tthrow new TypeError('Size is not a number.');\n\t\t}\n\t\tif (byteLength < 0) {\n\t\t\tthrow new RangeError('Length is negative.');\n\t\t}\n\t\tif (byteOffset < 0 || byteOffset + byteLength > defined(maxLength, this.byteLength)) {\n\t\t\tthrow new RangeError('Offsets are out of bounds.');\n\t\t}\n\t},\n\n\t_action: function (type, isReadAction, byteOffset, littleEndian, value) {\n\t\treturn this._engineAction(\n\t\t\ttype,\n\t\t\tisReadAction,\n\t\t\tdefined(byteOffset, this._offset),\n\t\t\tdefined(littleEndian, this._littleEndian),\n\t\t\tvalue\n\t\t);\n\t},\n\n\t_dataViewAction: function (type, isReadAction, byteOffset, littleEndian, value) {\n\t\t// Move the internal offset forward\n\t\tthis._offset = byteOffset + dataTypes[type];\n\t\treturn isReadAction ? this._view['get' + type](byteOffset, littleEndian) : this._view['set' + type](byteOffset, value, littleEndian);\n\t},\n\n\t_arrayBufferAction: function (type, isReadAction, byteOffset, littleEndian, value) {\n\t\tvar size = dataTypes[type], TypedArray = ctx[type + 'Array'], typedArray;\n\n\t\tlittleEndian = defined(littleEndian, this._littleEndian);\n\n\t\t// ArrayBuffer: we use a typed array of size 1 from original buffer if alignment is good and from slice when it's not\n\t\tif (size === 1 || ((this.byteOffset + byteOffset) % size === 0 && littleEndian)) {\n\t\t\ttypedArray = new TypedArray(this.buffer, this.byteOffset + byteOffset, 1);\n\t\t\tthis._offset = byteOffset + size;\n\t\t\treturn isReadAction ? typedArray[0] : (typedArray[0] = value);\n\t\t} else {\n\t\t\tvar bytes = new Uint8Array(isReadAction ? this.getBytes(size, byteOffset, littleEndian, true) : size);\n\t\t\ttypedArray = new TypedArray(bytes.buffer, 0, 1);\n\n\t\t\tif (isReadAction) {\n\t\t\t\treturn typedArray[0];\n\t\t\t} else {\n\t\t\t\ttypedArray[0] = value;\n\t\t\t\tthis._setBytes(byteOffset, bytes, littleEndian);\n\t\t\t}\n\t\t}\n\t},\n\n\t_arrayAction: function (type, isReadAction, byteOffset, littleEndian, value) {\n\t\treturn isReadAction ? this['_get' + type](byteOffset, littleEndian) : this['_set' + type](byteOffset, value, littleEndian);\n\t},\n\n\t// Helpers\n\n\t_getBytes: function (length, byteOffset, littleEndian) {\n\t\tlittleEndian = defined(littleEndian, this._littleEndian);\n\t\tbyteOffset = defined(byteOffset, this._offset);\n\t\tlength = defined(length, this.byteLength - byteOffset);\n\n\t\tthis._checkBounds(byteOffset, length);\n\n\t\tbyteOffset += this.byteOffset;\n\n\t\tthis._offset = byteOffset - this.byteOffset + length;\n\n\t\tvar result = (\n\t\t\tthis._isArrayBuffer\n\t\t\t? new Uint8Array(this.buffer, byteOffset, length)\n\t\t\t: (this.buffer.slice || Array.prototype.slice).call(this.buffer, byteOffset, byteOffset + length)\n\t\t);\n\n\t\treturn littleEndian || length <= 1 ? result : arrayFrom(result).reverse();\n\t},\n\n\t// wrapper for external calls (do not return inner buffer directly to prevent it's modifying)\n\tgetBytes: function (length, byteOffset, littleEndian, toArray) {\n\t\tvar result = this._getBytes(length, byteOffset, defined(littleEndian, true));\n\t\treturn toArray ? arrayFrom(result) : result;\n\t},\n\n\t_setBytes: function (byteOffset, bytes, littleEndian) {\n\t\tvar length = bytes.length;\n\n\t\t// needed for Opera\n\t\tif (length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tlittleEndian = defined(littleEndian, this._littleEndian);\n\t\tbyteOffset = defined(byteOffset, this._offset);\n\n\t\tthis._checkBounds(byteOffset, length);\n\n\t\tif (!littleEndian && length > 1) {\n\t\t\tbytes = arrayFrom(bytes, true).reverse();\n\t\t}\n\n\t\tbyteOffset += this.byteOffset;\n\n\t\tif (this._isArrayBuffer) {\n\t\t\tnew Uint8Array(this.buffer, byteOffset, length).set(bytes);\n\t\t}\n\t\telse {\n\t\t\tif (NODE && this._isNodeBuffer) {\n\t\t\t\tnew Buffer(bytes).copy(this.buffer, byteOffset);\n\t\t\t} else {\n\t\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\t\tthis.buffer[byteOffset + i] = bytes[i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis._offset = byteOffset - this.byteOffset + length;\n\t},\n\n\tsetBytes: function (byteOffset, bytes, littleEndian) {\n\t\tthis._setBytes(byteOffset, bytes, defined(littleEndian, true));\n\t},\n\n\tgetString: function (byteLength, byteOffset, encoding) {\n\t\tif (NODE && this._isNodeBuffer) {\n\t\t\tbyteOffset = defined(byteOffset, this._offset);\n\t\t\tbyteLength = defined(byteLength, this.byteLength - byteOffset);\n\n\t\t\tthis._checkBounds(byteOffset, byteLength);\n\n\t\t\tthis._offset = byteOffset + byteLength;\n\t\t\treturn this.buffer.toString(encoding || 'binary', this.byteOffset + byteOffset, this.byteOffset + this._offset);\n\t\t}\n\t\tvar bytes = this._getBytes(byteLength, byteOffset, true);\n\t\t// backward-compatibility\n\t\tencoding = encoding === 'utf8' ? 'utf-8' : (encoding || 'binary');\n\t\tif (TextDecoder && encoding !== 'binary') {\n\t\t\treturn new TextDecoder(encoding).decode(this._isArrayBuffer ? bytes : new Uint8Array(bytes));\n\t\t}\n\t\tvar string = '';\n\t\tbyteLength = bytes.length;\n\t\tfor (var i = 0; i < byteLength; i++) {\n\t\t\tstring += String.fromCharCode(bytes[i]);\n\t\t}\n\t\tif (encoding === 'utf-8') {\n\t\t\tstring = decodeURIComponent(escape(string));\n\t\t}\n\t\treturn string;\n\t},\n\n\tsetString: function (byteOffset, subString, encoding) {\n\t\tif (NODE && this._isNodeBuffer) {\n\t\t\tbyteOffset = defined(byteOffset, this._offset);\n\t\t\tthis._checkBounds(byteOffset, subString.length);\n\t\t\tthis._offset = byteOffset + this.buffer.write(subString, this.byteOffset + byteOffset, encoding || 'binary');\n\t\t\treturn;\n\t\t}\n\t\t// backward-compatibility\n\t\tencoding = encoding === 'utf8' ? 'utf-8' : (encoding || 'binary');\n\t\tvar bytes;\n\t\tif (TextEncoder && encoding !== 'binary') {\n\t\t\tbytes = new TextEncoder(encoding).encode(subString);\n\t\t} else {\n\t\t\tif (encoding === 'utf-8') {\n\t\t\t\tsubString = unescape(encodeURIComponent(subString));\n\t\t\t}\n\t\t\tbytes = getCharCodes(subString);\n\t\t}\n\t\tthis._setBytes(byteOffset, bytes, true);\n\t},\n\n\tgetChar: function (byteOffset) {\n\t\treturn this.getString(1, byteOffset);\n\t},\n\n\tsetChar: function (byteOffset, character) {\n\t\tthis.setString(byteOffset, character);\n\t},\n\n\ttell: function () {\n\t\treturn this._offset;\n\t},\n\n\tseek: function (byteOffset) {\n\t\tthis._checkBounds(byteOffset, 0);\n\t\treturn this._offset = byteOffset;\n\t},\n\n\tskip: function (byteLength) {\n\t\treturn this.seek(this._offset + byteLength);\n\t},\n\n\tslice: function (start, end, forceCopy) {\n\t\tfunction normalizeOffset(offset, byteLength) {\n\t\t\treturn offset < 0 ? offset + byteLength : offset;\n\t\t}\n\n\t\tstart = normalizeOffset(start, this.byteLength);\n\t\tend = normalizeOffset(defined(end, this.byteLength), this.byteLength);\n\n\t\treturn (\n\t\t\tforceCopy\n\t\t\t? new jDataView(this.getBytes(end - start, start, true, true), undefined, undefined, this._littleEndian)\n\t\t\t: new jDataView(this.buffer, this.byteOffset + start, end - start, this._littleEndian)\n\t\t);\n\t},\n\n\talignBy: function (byteCount) {\n\t\tthis._bitOffset = 0;\n\t\tif (defined(byteCount, 1) !== 1) {\n\t\t\treturn this.skip(byteCount - (this._offset % byteCount || byteCount));\n\t\t} else {\n\t\t\treturn this._offset;\n\t\t}\n\t},\n\n\t// Compatibility functions\n\n\t_getFloat64: function (byteOffset, littleEndian) {\n\t\tvar b = this._getBytes(8, byteOffset, littleEndian),\n\n\t\t\tsign = 1 - (2 * (b[7] >> 7)),\n\t\t\texponent = ((((b[7] << 1) & 0xff) << 3) | (b[6] >> 4)) - ((1 << 10) - 1),\n\n\t\t// Binary operators such as | and << operate on 32 bit values, using + and Math.pow(2) instead\n\t\t\tmantissa = ((b[6] & 0x0f) * pow2(48)) + (b[5] * pow2(40)) + (b[4] * pow2(32)) +\n\t\t\t\t\t\t(b[3] * pow2(24)) + (b[2] * pow2(16)) + (b[1] * pow2(8)) + b[0];\n\n\t\tif (exponent === 1024) {\n\t\t\tif (mantissa !== 0) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\treturn sign * Infinity;\n\t\t\t}\n\t\t}\n\n\t\tif (exponent === -1023) { // Denormalized\n\t\t\treturn sign * mantissa * pow2(-1022 - 52);\n\t\t}\n\n\t\treturn sign * (1 + mantissa * pow2(-52)) * pow2(exponent);\n\t},\n\n\t_getFloat32: function (byteOffset, littleEndian) {\n\t\tvar b = this._getBytes(4, byteOffset, littleEndian),\n\n\t\t\tsign = 1 - (2 * (b[3] >> 7)),\n\t\t\texponent = (((b[3] << 1) & 0xff) | (b[2] >> 7)) - 127,\n\t\t\tmantissa = ((b[2] & 0x7f) << 16) | (b[1] << 8) | b[0];\n\n\t\tif (exponent === 128) {\n\t\t\tif (mantissa !== 0) {\n\t\t\t\treturn NaN;\n\t\t\t} else {\n\t\t\t\treturn sign * Infinity;\n\t\t\t}\n\t\t}\n\n\t\tif (exponent === -127) { // Denormalized\n\t\t\treturn sign * mantissa * pow2(-126 - 23);\n\t\t}\n\n\t\treturn sign * (1 + mantissa * pow2(-23)) * pow2(exponent);\n\t},\n\n\t_get64: function (Type, byteOffset, littleEndian) {\n\t\tlittleEndian = defined(littleEndian, this._littleEndian);\n\t\tbyteOffset = defined(byteOffset, this._offset);\n\n\t\tvar parts = littleEndian ? [0, 4] : [4, 0];\n\n\t\tfor (var i = 0; i < 2; i++) {\n\t\t\tparts[i] = this.getUint32(byteOffset + parts[i], littleEndian);\n\t\t}\n\n\t\tthis._offset = byteOffset + 8;\n\n\t\treturn new Type(parts[0], parts[1]);\n\t},\n\n\tgetInt64: function (byteOffset, littleEndian) {\n\t\treturn this._get64(Int64, byteOffset, littleEndian);\n\t},\n\n\tgetUint64: function (byteOffset, littleEndian) {\n\t\treturn this._get64(Uint64, byteOffset, littleEndian);\n\t},\n\n\t_getInt32: function (byteOffset, littleEndian) {\n\t\tvar b = this._getBytes(4, byteOffset, littleEndian);\n\t\treturn (b[3] << 24) | (b[2] << 16) | (b[1] << 8) | b[0];\n\t},\n\n\t_getUint32: function (byteOffset, littleEndian) {\n\t\treturn this._getInt32(byteOffset, littleEndian) >>> 0;\n\t},\n\n\t_getInt16: function (byteOffset, littleEndian) {\n\t\treturn (this._getUint16(byteOffset, littleEndian) << 16) >> 16;\n\t},\n\n\t_getUint16: function (byteOffset, littleEndian) {\n\t\tvar b = this._getBytes(2, byteOffset, littleEndian);\n\t\treturn (b[1] << 8) | b[0];\n\t},\n\n\t_getInt8: function (byteOffset) {\n\t\treturn (this._getUint8(byteOffset) << 24) >> 24;\n\t},\n\n\t_getUint8: function (byteOffset) {\n\t\treturn this._getBytes(1, byteOffset)[0];\n\t},\n\n\t_getBitRangeData: function (bitLength, byteOffset) {\n\t\tvar startBit = (defined(byteOffset, this._offset) << 3) + this._bitOffset,\n\t\t\tendBit = startBit + bitLength,\n\t\t\tstart = startBit >>> 3,\n\t\t\tend = (endBit + 7) >>> 3,\n\t\t\tb = this._getBytes(end - start, start, true),\n\t\t\twideValue = 0;\n\n\t\tif ((this._bitOffset = endBit & 7)) {\n\t\t\tthis._bitOffset -= 8;\n\t\t}\n\n\t\tfor (var i = 0, length = b.length; i < length; i++) {\n\t\t\twideValue = (wideValue << 8) | b[i];\n\t\t}\n\n\t\treturn {\n\t\t\tstart: start,\n\t\t\tbytes: b,\n\t\t\twideValue: wideValue\n\t\t};\n\t},\n\n\tgetSigned: function (bitLength, byteOffset) {\n\t\tvar shift = 32 - bitLength;\n\t\treturn (this.getUnsigned(bitLength, byteOffset) << shift) >> shift;\n\t},\n\n\tgetUnsigned: function (bitLength, byteOffset) {\n\t\tvar value = this._getBitRangeData(bitLength, byteOffset).wideValue >>> -this._bitOffset;\n\t\treturn bitLength < 32 ? (value & ~(-1 << bitLength)) : value;\n\t},\n\n\t_setBinaryFloat: function (byteOffset, value, mantSize, expSize, littleEndian) {\n\t\tvar signBit = value < 0 ? 1 : 0,\n\t\t\texponent,\n\t\t\tmantissa,\n\t\t\teMax = ~(-1 << (expSize - 1)),\n\t\t\teMin = 1 - eMax;\n\n\t\tif (value < 0) {\n\t\t\tvalue = -value;\n\t\t}\n\n\t\tif (value === 0) {\n\t\t\texponent = 0;\n\t\t\tmantissa = 0;\n\t\t} else if (isNaN(value)) {\n\t\t\texponent = 2 * eMax + 1;\n\t\t\tmantissa = 1;\n\t\t} else if (value === Infinity) {\n\t\t\texponent = 2 * eMax + 1;\n\t\t\tmantissa = 0;\n\t\t} else {\n\t\t\texponent = Math.floor(Math.log(value) / Math.LN2);\n\t\t\tif (exponent >= eMin && exponent <= eMax) {\n\t\t\t\tmantissa = Math.floor((value * pow2(-exponent) - 1) * pow2(mantSize));\n\t\t\t\texponent += eMax;\n\t\t\t} else {\n\t\t\t\tmantissa = Math.floor(value / pow2(eMin - mantSize));\n\t\t\t\texponent = 0;\n\t\t\t}\n\t\t}\n\n\t\tvar b = [];\n\t\twhile (mantSize >= 8) {\n\t\t\tb.push(mantissa % 256);\n\t\t\tmantissa = Math.floor(mantissa / 256);\n\t\t\tmantSize -= 8;\n\t\t}\n\t\texponent = (exponent << mantSize) | mantissa;\n\t\texpSize += mantSize;\n\t\twhile (expSize >= 8) {\n\t\t\tb.push(exponent & 0xff);\n\t\t\texponent >>>= 8;\n\t\t\texpSize -= 8;\n\t\t}\n\t\tb.push((signBit << expSize) | exponent);\n\n\t\tthis._setBytes(byteOffset, b, littleEndian);\n\t},\n\n\t_setFloat32: function (byteOffset, value, littleEndian) {\n\t\tthis._setBinaryFloat(byteOffset, value, 23, 8, littleEndian);\n\t},\n\n\t_setFloat64: function (byteOffset, value, littleEndian) {\n\t\tthis._setBinaryFloat(byteOffset, value, 52, 11, littleEndian);\n\t},\n\n\t_set64: function (Type, byteOffset, value, littleEndian) {\n\t\tif (typeof value !== 'object') {\n\t\t\tvalue = Type.fromNumber(value);\n\t\t}\n\n\t\tlittleEndian = defined(littleEndian, this._littleEndian);\n\t\tbyteOffset = defined(byteOffset, this._offset);\n\n\t\tvar parts = littleEndian ? {lo: 0, hi: 4} : {lo: 4, hi: 0};\n\n\t\tfor (var partName in parts) {\n\t\t\tthis.setUint32(byteOffset + parts[partName], value[partName], littleEndian);\n\t\t}\n\n\t\tthis._offset = byteOffset + 8;\n\t},\n\n\tsetInt64: function (byteOffset, value, littleEndian) {\n\t\tthis._set64(Int64, byteOffset, value, littleEndian);\n\t},\n\n\tsetUint64: function (byteOffset, value, littleEndian) {\n\t\tthis._set64(Uint64, byteOffset, value, littleEndian);\n\t},\n\n\t_setUint32: function (byteOffset, value, littleEndian) {\n\t\tthis._setBytes(byteOffset, [\n\t\t\tvalue & 0xff,\n\t\t\t(value >>> 8) & 0xff,\n\t\t\t(value >>> 16) & 0xff,\n\t\t\tvalue >>> 24\n\t\t], littleEndian);\n\t},\n\n\t_setUint16: function (byteOffset, value, littleEndian) {\n\t\tthis._setBytes(byteOffset, [\n\t\t\tvalue & 0xff,\n\t\t\t(value >>> 8) & 0xff\n\t\t], littleEndian);\n\t},\n\n\t_setUint8: function (byteOffset, value) {\n\t\tthis._setBytes(byteOffset, [value & 0xff]);\n\t},\n\n\tsetUnsigned: function (byteOffset, value, bitLength) {\n\t\tvar data = this._getBitRangeData(bitLength, byteOffset),\n\t\t\twideValue = data.wideValue,\n\t\t\tb = data.bytes;\n\n\t\twideValue &= ~(~(-1 << bitLength) << -this._bitOffset); // clearing bit range before binary \"or\"\n\t\twideValue |= (bitLength < 32 ? (value & ~(-1 << bitLength)) : value) << -this._bitOffset; // setting bits\n\n\t\tfor (var i = b.length - 1; i >= 0; i--) {\n\t\t\tb[i] = wideValue & 0xff;\n\t\t\twideValue >>>= 8;\n\t\t}\n\n\t\tthis._setBytes(data.start, b, true);\n\t}\n};\n\nif (NODE) {\n\tvar nodeNaming = {\n\t\t'Int8': 'Int8',\n\t\t'Int16': 'Int16',\n\t\t'Int32': 'Int32',\n\t\t'Uint8': 'UInt8',\n\t\t'Uint16': 'UInt16',\n\t\t'Uint32': 'UInt32',\n\t\t'Float32': 'Float',\n\t\t'Float64': 'Double'\n\t};\n\n\tproto._nodeBufferAction = function (type, isReadAction, byteOffset, littleEndian, value) {\n\t\t// Move the internal offset forward\n\t\tthis._offset = byteOffset + dataTypes[type];\n\t\tvar nodeName = nodeNaming[type] + ((type === 'Int8' || type === 'Uint8') ? '' : littleEndian ? 'LE' : 'BE');\n\t\tbyteOffset += this.byteOffset;\n\t\treturn isReadAction ? this.buffer['read' + nodeName](byteOffset) : this.buffer['write' + nodeName](value, byteOffset);\n\t};\n}\n\nfor (var type in dataTypes) {\n\t(function (type) {\n\t\tproto['get' + type] = function (byteOffset, littleEndian) {\n\t\t\treturn this._action(type, true, byteOffset, littleEndian);\n\t\t};\n\t\tproto['set' + type] = function (byteOffset, value, littleEndian) {\n\t\t\tthis._action(type, false, byteOffset, littleEndian, value);\n\t\t};\n\t})(type);\n}\n\nproto._setInt32 = proto._setUint32;\nproto._setInt16 = proto._setUint16;\nproto._setInt8 = proto._setUint8;\nproto.setSigned = proto.setUnsigned;\n\nfor (var method in proto) {\n\tif (method.slice(0, 3) === 'set') {\n\t\t(function (type) {\n\t\t\tproto['write' + type] = function () {\n\t\t\t\tArray.prototype.unshift.call(arguments, undefined);\n\t\t\t\tthis['set' + type].apply(this, arguments);\n\t\t\t};\n\t\t})(method.slice(3));\n\t}\n}\n"],"names":["is","obj","Ctor","constructor","Object","prototype","toString","call","name","arrayFrom","arrayLike","forceCopy","Array","slice","defined","value","defaultValue","undefined","jDataView","buffer","byteOffset","byteLength","littleEndian","result","_littleEndian","this","wrapBuffer","_isArrayBuffer","compatibility","ArrayBuffer","_isPixelData","BROWSER","_isDataView","DataView","_isNodeBuffer","NodeBuffer","Buffer","isBuffer","TypeError","bufferLength","length","_offset","_bitOffset","_view","_checkBounds","_engineAction","_dataViewAction","_nodeBufferAction","_arrayBufferAction","_arrayAction","getCharCodes","string","codes","Uint8Array","i","charCodeAt","pow2","n","Math","pow","Uint64","lo","hi","Int64","numToDigits","num","digits","split","reverse","add","x","y","z","max","carry","zi","push","floor","ctx","global","PixelData","TextEncoder","TextDecoder","writeFloatLE","Infinity","e","dataTypes","Int8","Int16","Int32","Uint8","Uint16","Uint32","Float32","Float64","fill","view","from","arguments","valueOf","fromNumber","number","create","apply","unsigned","Number","hiArray","loArray","str","proto","maxLength","RangeError","_action","type","isReadAction","typedArray","size","TypedArray","bytes","getBytes","_setBytes","_getBytes","toArray","set","copy","setBytes","getString","encoding","decode","String","fromCharCode","decodeURIComponent","escape","setString","subString","write","encode","unescape","encodeURIComponent","getChar","setChar","character","tell","seek","skip","start","end","normalizeOffset","offset","alignBy","byteCount","_getFloat64","b","sign","exponent","mantissa","NaN","_getFloat32","_get64","Type","parts","getUint32","getInt64","getUint64","_getInt32","_getUint32","_getInt16","_getUint16","_getInt8","_getUint8","_getBitRangeData","bitLength","startBit","endBit","wideValue","getSigned","shift","getUnsigned","_setBinaryFloat","mantSize","expSize","signBit","eMax","eMin","isNaN","log","LN2","_setFloat32","_setFloat64","_set64","partName","setUint32","setInt64","setUint64","_setUint32","_setUint16","_setUint8","setUnsigned","data","nodeNaming","nodeName","_setInt32","_setInt16","_setInt8","setSigned","method","unshift"],"mappings":"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"}